{{!-- views/videoView/myVideos.handlebars --}}
<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"/>
<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css"/>

<style>
/* ======= M√ÄU ‚Äì FONT ======= */
body{background:#0f1720;color:#e8e8e8;min-height:100vh}
.badge-size{font-size:.75rem;padding:.35em .6em;border-radius:.5rem}
.btn-outline-sky   {color:#0dcaf0;border-color:#0dcaf0}
.btn-outline-sky:hover{background:#0dcaf0;color:#fff}
.btn-outline-danger{color:#ff6b6b;border-color:#ff6b6b}
.btn-outline-danger:hover{background:#ff6b6b;color:#fff}

/* ======= CARD ======= */
.video-card{border:0;border-radius:.75rem;overflow:hidden;background:#111722;
            transition:transform .2s}
.video-card:hover{transform:translateY(-4px)}
.video-card .card-body{background:#0e1118}

/* thumbnail */
.video-thumb{position:relative;display:block;width:100%;aspect-ratio:16/9}
.video-thumb video{width:100%;height:100%;object-fit:cover}
.play-overlay{position:absolute;inset:0;display:flex;align-items:center;
              justify-content:center;font-size:3.2rem;color:#fff;
              background:rgba(0,0,0,.35);opacity:0;transition:.25s}
.video-thumb:hover .play-overlay{opacity:1}
</style>

<div class="container py-5">
  <h2 class="text-center mb-4 text-warning">üìÅ Video c·ªßa b·∫°n</h2>

  {{#if videos.length}}
  <div class="row g-4">
    {{#each videos}}
    <div class="col-12 col-sm-6 col-lg-4 col-xl-3">
      <div class="video-card shadow-sm h-100 d-flex flex-column">
    
        {{!-- thumbnail + n√∫t play --}}
        <a href="{{public_url}}" target="_blank" class="video-thumb flex-shrink-0">
          <video src="{{public_url}}#t=0.25" muted playsinline loop></video>
          <span class="play-overlay"><i class="bi bi-play-circle-fill"></i></span>
        </a>
    
        {{!-- info + n√∫t --}}
        <div class="card-body d-flex flex-column">
          <h6 class="mb-2 text-truncate" title="{{title}}">{{title}}</h6>
    
          <span class="badge bg-primary-subtle text-primary-emphasis badge-size mb-2">
            {{size_mb}} MB
          </span>
    
          <div class="d-flex flex-column gap-2 mt-auto">
            {{!-- N√∫t YouTube --}}
            {{#if youtube_id}}
            {{!-- N·∫øu ƒë√£ upload YouTube, hi·ªÉn th·ªã n√∫t ƒë√£ up --}}
            <button class="btn btn-sm btn-secondary w-100 mt-2" disabled title="Video ƒë√£ ƒë∆∞·ª£c upload l√™n YouTube">
              <i class="bi bi-check-circle-fill me-1"></i> ƒê√£ upload
            </button>
            {{else}}
            {{!-- N·∫øu ch∆∞a upload, cho ph√©p upload --}}
            <button class="btn btn-sm btn-outline-sky w-100 btn-youtube" title="Up video n√†y l√™n YouTube" data-id="{{id}}"
              data-url="{{local_path}}" data-title="{{title}}">
              <i class="bi bi-youtube me-1"></i> YouTube
            </button>
            {{/if}}
            {{!-- N√∫t Xo√° --}}
            <button class="btn btn-sm btn-outline-danger w-100 btn-del" title="Xo√° video n√†y" data-id="{{id}}">
              <i class="bi bi-trash me-1"></i> Xo√°
            </button>
          </div>
    
        </div>
      </div>
    </div>
    {{/each}}

  </div>

    {{!-- ============= PAGINATION ============== --}}
  <nav class="mt-5 d-flex justify-content-center">
    <ul class="pagination pagination-sm mb-0">
      <li class="page-item {{#if (eq page 1)}}disabled{{/if}}">
        <a class="page-link" href="?page={{prevPage}}">&laquo;</a>
      </li>

      {{!-- ch·ªâ in 1 ‚Ä¶ m·ªói ph√≠a --}}
      {{#each pages}}
        {{#if (or (lte this 2) (gte this ../lastPageMinus1) (between this ../pageMinus1 ../pagePlus1))}}
          <li class="page-item {{#if (eq ../page this)}}active{{/if}}">
            <a class="page-link" href="?page={{this}}">{{this}}</a>
          </li>
        {{else}}
          {{!-- in ‚Äú ‚Ä¶ ‚Äù ƒë√∫ng 1 l·∫ßn --}}
          {{#unless (lookup ../_ellipsis this)}}
            {{set ../_ellipsis this true}}
            <li class="page-item disabled">
              <span class="page-link">‚Ä¶</span>
            </li>
          {{/unless}}
        {{/if}}
      {{/each}}

      <li class="page-item {{#if (eq page lastPage)}}disabled{{/if}}">
        <a class="page-link" href="?page={{nextPage}}">&raquo;</a>
      </li>
    </ul>
  </nav>


  {{else}}
    <p class="text-center fs-5 text-muted">B·∫°n ch∆∞a t·∫°o video n√†o.</p>
  {{/if}}
</div>

<script>
/* ==== XO√Å VIDEO ==== */
document.querySelectorAll('.btn-del').forEach(btn=>{
  btn.addEventListener('click',async()=>{
    const id = btn.dataset.id;
    if(!confirm('Xo√° video #'+id+'?')) return;
    try{
      const res = await fetch('/api/videos/'+id,{method:'DELETE'});
      const js  = await res.json();
      if(js.success) btn.closest('.col-12')?.remove();
      else alert(js.error||'Xo√° th·∫•t b·∫°i!');
    }catch{ alert('L·ªói m·∫°ng!'); }
  });
});
  document.querySelectorAll('.btn-youtube').forEach(btn => {
    btn.addEventListener('click', async () => {
      const id = btn.dataset.id;
      const url = btn.dataset.url;
      const title = btn.dataset.title;

      if (!url) return alert('‚ùå Thi·∫øu ƒë∆∞·ªùng d·∫´n video.');
      if (!confirm('B·∫°n c√≥ mu·ªën upload video #' + id + ' l√™n YouTube kh√¥ng?')) return;

      btn.disabled = true;
      btn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> ƒêang upload...';

      try {
        const res = await fetch(`/api/videos/${id}/upload-youtube`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include',
          body: JSON.stringify({ url,title })
        });

        const contentType = res.headers.get("content-type") || '';
        const text = await res.text();
        let js;

        if (!res.ok) {
          if (res.status === 401) {
            alert('‚ùå B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
            window.location.href = '/login';
            return;
          }
          if (!contentType.includes("application/json")) {
            console.error('‚ùå Server tr·∫£ v·ªÅ HTML:', text);
            alert('L·ªói: Server tr·∫£ v·ªÅ HTML thay v√¨ JSON.');
            return;
          }
        }

        try {
          js = JSON.parse(text);
        } catch (e) {
          console.error('‚ùå Kh√¥ng th·ªÉ parse JSON:', text);
          alert('L·ªói: Server tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá:\n' + text);
          return;
        }

        if (js.success) {
          alert('‚úÖ Video ƒë√£ ƒë∆∞·ª£c upload l√™n YouTube!\nüëâ ' + js.youtubeUrl);
        } else {
          alert('‚ùå Upload th·∫•t b·∫°i: ' + (js.error || 'Kh√¥ng r√µ l·ªói'));
        }

      } catch (e) {
        console.error('‚ùå L·ªói upload:', e);
        alert('‚ùå Upload th·∫•t b·∫°i. Ki·ªÉm tra console.');
      }

      btn.disabled = false;
      btn.innerHTML = '<i class="bi bi-youtube me-1"></i> YouTube';
    });
  });

</script>
<video id="video-player" controls>
  <source src="{{video.publish_url}}" type="video/mp4">
</video>

<script>
  const video = document.getElementById('video-player');
  video.addEventListener('ended', () => {
    fetch('/api/video-statistics/complete', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        videoId: {{video.id}},
        durationWatched: Math.floor(video.duration),
        isCompleted: true
      })
    });
  });
</script>
