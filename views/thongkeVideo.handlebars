<!-- thongkeVideo.hbs -->
<meta name="csrf-token" content="{{csrfToken}}">

<style>
    body {
        background: linear-gradient(145deg, #fefefe, #dce3ea);
        color: #212529;
        font-family: 'Segoe UI', sans-serif;
        background-attachment: fixed;
        background-size: cover;
        position: relative;
    }

    #bgVideo {
        position: fixed;
        inset: 0;
        width: 100vw;
        height: 100vh;
        object-fit: cover;
        filter: brightness(0.8) contrast(1.1) saturate(1.1);
        z-index: -2;
    }
    .bg-overlay {
        position: fixed;
        inset: 0;
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(4px);
        z-index: -1;
        pointer-events: none;
    }
    @media (max-width: 768px) {
        #bgVideo, .bg-overlay { display: none; }
    }

    .card {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border-radius: 16px;
    }

    .table thead th {
        font-weight: bold;
    }

    canvas {
        background-color: #ffffff;
        border-radius: 8px;
        padding: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
        display: none; /* ·∫®n m·∫∑c ƒë·ªãnh, ch·ªâ hi·ªÉn th·ªã canvas ƒë∆∞·ª£c ch·ªçn */
    }

    .date-range-container {
        display: flex;
        gap: 10px;
    }

    .chart-container {
        margin-bottom: 2rem;
    }
</style>

<!-- ==== BACKGROUND VIDEO & OVERLAY ==== -->
<video id="bgVideo" autoplay muted loop playsinline poster="/video_background/bg_mv.png" preload="metadata">
    <source src="/video_background/backgroundSearch.webm" type="video/webm"/>
    <source src="/video_background/backgroundSearch.mp4" type="video/mp4"/>
</video>
<div class="bg-overlay"></div>

<div class="container mt-5">
    <h2 class="text-warning mb-4">üìä Ph√¢n t√≠ch Video YouTube</h2>

    <!-- B·ªô l·ªçc th·ªùi gian linh ho·∫°t -->
    <form class="row g-3 mb-4" method="get" action="/thongke">
        <div class="col-md-3">
            <label for="period" class="form-label">üìÖ Ch·ªçn kho·∫£ng th·ªùi gian</label>
            <select class="form-select bg-light text-dark border-warning" name="period" id="period">
                <option value="week" {{selected filterPeriod "week"}}>Tu·∫ßn</option>
                <option value="month" {{selected filterPeriod "month"}}>Th√°ng</option>
                <option value="year" {{selected filterPeriod "year"}}>NƒÉm</option>
                <option value="custom" {{selected filterPeriod "custom"}}>T√πy ch·ªânh</option>
            </select>
        </div>

        <div class="col-md-4 period-custom" style="display: {{isCustom filterPeriod}}">
            <label for="customRange" class="form-label">üìÖ Ch·ªçn ng√†y</label>
            <div class="date-range-container">
                <input type="date" class="form-control bg-light text-dark border-warning" name="startDate" id="startDate" value="{{startDate}}">
                <span>to</span>
                <input type="date" class="form-control bg-light text-dark border-warning" name="endDate" id="endDate" value="{{endDate}}">
            </div>
            <div id="selectedRange" class="mt-2" style="display: none;">
                <label class="form-label">üìÖ T·ª´ - ƒê·∫øn:</label>
                <input type="text" class="form-control bg-light text-dark border-warning" name="customRange" id="customRange" readonly
                       placeholder="Ch·ªçn ng√†y ƒë·ªÉ hi·ªÉn th·ªã">
            </div>
        </div>

        <div class="col-md-2 align-self-end">
            <button type="submit" class="btn btn-warning"><i class="bi bi-funnel"></i> L·ªçc</button>
        </div>
    </form>

    <!-- Th·ªëng k√™ t·ªïng quan -->
    <div class="row mb-4 g-4">
        <div class="col-md-4">
            <div class="card bg-white border-warning">
                <div class="card-body">
                    <h5 class="card-title">üëÅÔ∏è T·ªïng l∆∞·ª£t xem</h5>
                    <p class="display-6 fw-bold text-warning">{{stats.totalViews}}</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card bg-white border-info">
                <div class="card-body">
                    <h5 class="card-title">‚ù§Ô∏è T·ªïng l∆∞·ª£t th√≠ch</h5>
                    <p class="display-6 fw-bold text-info">{{stats.totalLikes}}</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card bg-white border-light">
                <div class="card-body">
                    <h5 class="card-title">üé¨ T·ªïng s·ªë video</h5>
                    <p class="display-6 fw-bold text-dark">{{stats.totalVideos}}</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Danh s√°ch video -->
    <div class="table-responsive mb-5">
        <table class="table table-hover table-striped align-middle">
            <thead class="table-warning text-dark">
                <tr>
                    <th>üìå Ti√™u ƒë·ªÅ</th>
                    <th>‚è∞ Ng√†y upload</th>
                    <th>üîó Link YouTube</th>
                    <th>üëÅÔ∏è‚Äçüó®Ô∏è L∆∞·ª£t xem</th>
                    <th>‚ù§Ô∏è Like</th>
                </tr>
            </thead>
            <tbody>
                {{#each videos}}
                <tr>
                    <td>{{this.title}}</td>
                    <td>{{formatDate this.updated_at format="HH:mm DD/MM/YYYY"}}</td>
                    <td>
                        <a href="https://www.youtube.com/watch?v={{this.youtube_id}}"
                           class="btn btn-sm btn-outline-dark" target="_blank">
                            <i class="bi bi-play-circle"></i> Xem
                        </a>
                    </td>
                    <td><span class="badge bg-info text-dark">{{this.viewCount}}</span></td>
                    <td><span class="badge bg-success">{{this.likeCount}}</span></td>
                </tr>
                {{else}}
                <tr>
                    <td colspan="7" class="text-center text-muted">Kh√¥ng c√≥ video n√†o trong th·ªùi gian ƒë∆∞·ª£c ch·ªçn.</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <!-- Dropdown ch·ªçn bi·ªÉu ƒë·ªì -->
    <div class="chart-container">
        <h4 class="text-dark mb-3">üìä Ch·ªçn bi·ªÉu ƒë·ªì</h4>
        <select class="form-select bg-light text-dark border-warning w-auto mb-3" id="chartSelect" aria-label="Ch·ªçn bi·ªÉu ƒë·ªì">
            <option value="viewsChart" selected>L∆∞·ª£t xem theo ng√†y</option>
            <option value="videoViewsChart">L∆∞·ª£t xem t·ª´ng video</option>
        </select>

        <!-- Bi·ªÉu ƒë·ªì -->
        <canvas id="viewsChart" height="100"></canvas>
        <canvas id="videoViewsChart" height="120"></canvas>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
(() => {
    // Hi·ªÉn th·ªã input t√πy ch·ªânh khi ch·ªçn "T√πy ch·ªânh"
    function toggleCustomInput() {
        const period = document.getElementById('period').value;
        const customInput = document.querySelector('.period-custom');
        customInput.style.display = period === 'custom' ? 'block' : 'none';
    }
    document.getElementById('period').addEventListener('change', toggleCustomInput);
    toggleCustomInput();

    // C·∫≠p nh·∫≠t gi√° tr·ªã customRange khi ch·ªçn ng√†y
    function updateCustomRange() {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const customRangeInput = document.getElementById('customRange');
        const selectedRange = document.getElementById('selectedRange');

        if (startDate && endDate) {
            customRangeInput.value = `${startDate}/${endDate}`;
            selectedRange.style.display = 'block';
        } else {
            customRangeInput.value = '';
            selectedRange.style.display = 'none';
        }
    }
    document.getElementById('startDate').addEventListener('change', updateCustomRange);
    document.getElementById('endDate').addEventListener('change', updateCustomRange);

    // Kh·ªüi t·∫°o bi·ªÉu ƒë·ªì
    const ctx1 = document.getElementById('viewsChart').getContext('2d');
    const viewsChart = new Chart(ctx1, {
        type: 'line',
        data: {
            labels: {{{ viewChartJSON.labels }}},
            datasets: [{
                label: 'L∆∞·ª£t xem h√†ng ng√†y',
                data: {{{ viewChartJSON.data }}},
                backgroundColor: 'rgba(255, 206, 86, 0.2)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4,
                pointBackgroundColor: 'rgba(255, 99, 132, 1)',
                pointRadius: 4,
                pointHoverRadius: 7
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: { display: true, text: 'üìà Bi·ªÉu ƒë·ªì l∆∞·ª£t xem theo ng√†y', font: { size: 18 } }
            },
            scales: {
                y: { beginAtZero: true, ticks: { precision: 0 } }
            }
        }
    });

    const ctx2 = document.getElementById('videoViewsChart').getContext('2d');
    const videoViewsChart = new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: {{{ videoTitles }}},
            datasets: [{
                label: 'L∆∞·ª£t xem',
                data: {{{ videoViews }}},
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)',
                    'rgba(100, 181, 246, 0.6)',
                    'rgba(255, 138, 128, 0.6)',
                    'rgba(174, 213, 129, 0.6)'
                ],
                borderColor: 'rgba(0,0,0,0.05)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            indexAxis: 'y',
            plugins: {
                legend: { display: false },
                title: { display: true, text: 'üìä L∆∞·ª£t xem t·ª´ng video', font: { size: 18 } }
            },
            scales: {
                x: { beginAtZero: true, ticks: { precision: 0 } }
            }
        }
    });

    // Hi·ªÉn th·ªã/·∫©n bi·ªÉu ƒë·ªì d·ª±a tr√™n dropdown
    function toggleChart() {
        const chartSelect = document.getElementById('chartSelect').value;
        document.getElementById('viewsChart').style.display = chartSelect === 'viewsChart' ? 'block' : 'none';
        document.getElementById('videoViewsChart').style.display = chartSelect === 'videoViewsChart' ? 'block' : 'none';
    }
    document.getElementById('chartSelect').addEventListener('change', toggleChart);
    toggleChart(); // G·ªçi ngay khi t·∫£i trang
})();
</script>